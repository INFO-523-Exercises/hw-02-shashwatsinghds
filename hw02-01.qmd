---
title: "hw02-01"
author: "Shashwat Singh"
format: html
editor: visual
description: "Diagnosing like a Doctor: Performing various basic operations such as identifying summary statistics and outliers in the data."
---

# Diagnosing like a Doctor

# Install Required Packages

```{r}
# Sets the number of significant figures to two
options(digits = 2)

# Checking and installing pacman 
if (!require(pacman))
  install.packages("pacman")

# Downloads and load required packages
pacman::p_load(dlookr, # Exploratory data analysis
               formattable, # HTML tables from R outputs
               here, # Standardizes paths to data
               kableExtra, # Alternative to formattable
               knitr, # Needed to write HTML reports
               missRanger, # To generate NAs
               tidyverse) # Powerful data wrangling package suite
```

# Load and Examine a Data Set

-   Load data and view
-   Examine columns and data types
-   Define box plots
-   Describe meta data

Using the dataset from tidyurl- The dataset contains stock prices of big tech companies and tries to analyse the collapse of "Big Tech" stock prices. The data comes from Yahoo Finance via Kaggle

```{r}
# Loading the dataset
setwd("/Users/shashwatsingh/Desktop/DM/hw-02")
dataset <- read.csv("big_tech_stock_prices.csv") 

# Formattable data
dataset |>
  head() |>
  formattable()
```

# Diagnose your Data

```{r}
#Properties of the data
dataset |>
  diagnose() |>
  formattable()
```

-   `variables`: name of each variable

-   `types`: data type of each variable

-   `missing_count`: number of missing values

-   `missing_percent`: percentage of missing values

-   `unique_count`: number of unique values

-   `unique_rate`: rate of unique value - unique_count / number of observations

# Summary Statistics of your Data

## Numerical Variables

```{r, warning=FALSE}
# Summary statistics of our numerical columns
dataset |>
  diagnose_numeric() |>
  formattable()
```

-   `min`: minimum value

-   `Q1`: 1/4 quartile, 25th percentile

-   `mean`: arithmetic mean (average value)

-   `median`: median, 50th percentile

-   `Q3`: 3/4 quartile, 75th percentile

-   `max`: maximum value

-   `zero`: number of observations with the value 0

-   `minus`: number of observations with negative numbers

-   `outlier`: number of outliers

## Outliers

Any values that lie outside 1.5 \* IQR (Interquartile Range)

Let's see what the data look like with and without them

-   Create a table with columns containing outliers

-   Plot outliers in a box plot and histogram

```{r, warning=FALSE}
# Table showing outliers
diagnose_outlier(dataset) |>
  filter(outliers_ratio > 0) |>
  formattable()
```

-   `outliers_cnt`: number of outliers

-   `outliers_ratio`: ratio of outliers over all values

-   `outliers_mean`: arithmetic mean (average value) of outlier values

-   `with_mean`: arithmetic mean of all values **including** outliers

-   `without_mean`: arithmetic mean of all values **excluding** outliers

```{r, warning=FALSE}
# Selecting desired columns 
dataset |>
    plot_outlier()
```

## Missing Values (NAs)

-   Table showing the extent of NAs in columns containing them

-   Plot showing the frequency of missing values

```{r}
# Create the NA table
dataset |>
  generateNA(p = 0.3) |>
  plot_na_pareto(only_na = TRUE, plot = FALSE) |>
  formattable() # Publishable table
```

```{r}
# Plot the intersect of the columns with the most missing values
# This means that some combinations of columns have missing values in the same row
dataset |>
  generateNA(p = 0.3) |>
  plot_na_intersect(only_na = TRUE) 
```

## Categorical Variables

```{r}
# Diagnose our categorical columns
dataset |>
  diagnose_category() |> 
  formattable()
```

-   `variables`: category names

-   `levels`: group names within categories

-   `N`: number of observation

-   `freq`: number of observation at group level / number of observation at category level

-   `ratio`: percentage of observation at group level / number of observation at category level

-   `rank`: rank of the occupancy ratio of levels (order in which the groups are in the category)

# Produce an HTML Summary of a Data Set

```{r}
#diagnose_web_report(dataset)
```
